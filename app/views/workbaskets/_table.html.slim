table.table
  colgroup
    col width="80"
    col width="*"
    col width="180"
    col width="200"
    col width="120"
    col width="200"
    - if false
      col width="1"

  thead
    tr
      th
        = sortable(:id, "ID", { q: params[:q] })
      th
        = sortable(:title, "Workbasket", { q: params[:q] })
      th
        = sortable(:type, "Type", { q: params[:q] })
      th
        = sortable(:status, "Status", { q: params[:q] })
      th
        = sortable(:last_status_change_at, "Last event", { q: params[:q] })
      th
        | Next step

      - if false
        th width="1"
          | &nbsp;

  tbody
    - workbaskets.map do |workbasket|
      - workbasket = workbasket.decorate

      tr
        td
          = workbasket.id
        td
          = workbasket.title
        td
          = workbasket.type
        td
          - if workbasket.status_with_error?
            icon-error

          = workbasket.status
        td
          = workbasket.last_event_at
        td
          - if current_user.author_of_workbasket?(workbasket) && workbasket.editable?
            = link_to "Continue", workbasket_continue_link_based_on_type(workbasket)
          - else
            = link_to "View", workbasket_view_link_based_on_type(workbasket)

          - if current_user.author_of_workbasket?(workbasket)
            - if workbasket.can_withdraw?
              | &nbsp;|&nbsp;
              = link_to "Withdraw/edit", widthdraw_workbasket_from_workflow_create_measure_url(workbasket.id)

            - elsif workbasket.new_in_progress?
              | &nbsp;|&nbsp;
              = link_to "Delete", "#", data: { url: workbasket_view_link_based_on_type(workbasket) }, "onClick" => "MicroModal.show('main-menu-delete_confirmation_popup'); return false;"

        - if false
          td
            a href="#"
              icon-download

= paginate workbaskets
